{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///ClientApp/app/app-routing.module.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/cart/cart.component.ts","webpack:///ClientApp/app/cart/cart.component.html","webpack:///ClientApp/app/checkout/checkout.component.ts","webpack:///ClientApp/app/checkout/checkout.component.html","webpack:///ClientApp/app/login/login.component.ts","webpack:///ClientApp/app/login/login.component.html","webpack:///ClientApp/app/product-list/product-list.component.ts","webpack:///ClientApp/app/product-list/product-list.component.html","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/app/shop/shop.component.ts","webpack:///ClientApp/app/shop/shop.component.html","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","enableTracing","imports","AppComponent","title","selector","template","styles","AppModule","declarations","providers","bootstrap","CartComponent","data","router","loginRequired","navigate","templateUrl","styleUrls","CheckoutComponent","errorMessage","order","items","length","checkout","subscribe","success","err","onCheckout","LoginComponent","creds","username","password","login","onLogin","ProductListComponent","products","loadProducts","p","addToOrder","DataService","http","token","get","pipe","post","tokenExpiration","expiration","newProduct","item","find","i","productId","quantity","ProductArtId","artId","productArtist","artist","productCategory","category","productSize","size","productTitle","unitPrice","price","push","orderNumber","orderDate","getFullYear","toString","getTime","headers","set","response","Date","OrderItem","Order","Array","ShopComponent","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShopComponent } from './shop/shop.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\n\nconst routes: Routes = [\n    { path: '', component: ShopComponent },\n    { path: 'checkout', component: CheckoutComponent },\n    { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        enableTracing: false\n    })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: []\n})\nexport class AppComponent {\n  title = 'front-end-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { DataService } from './shared/dataService';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CartComponent } from './cart/cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ShopComponent,\r\n    ProductListComponent,\r\n    CartComponent,\r\n    CheckoutComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      AppRoutingModule,\r\n      FormsModule\r\n  ],\r\n    providers: [DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n    constructor(public data: DataService,\n        private router: Router) { }\n\n    ngOnInit(): void {\n    }\n\n    OnCheckout() {\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\n\n}\n","<div class=\"card ml-sm-5 ml-0\" style=\" min-width: 322px;\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Shopping Cart</h5>\n        <h6 class=\"card-subtitle mb-2 text-muted\">Product Amount: {{data.order.items.length}}</h6>\n    </div>\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Product</th>\n                    <th scope=\"col\">Quantity</th>\n                    <th scope=\"col\">Price</th>\n                    <th scope=\"col\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let o of data.order.items\">\n                    <td>{{o.productCategory}}</td>\n                    <td>{{o.quantity}}</td>\n                    <td>{{o.unitPrice | currency:\"USD\":true}}</td>\n                    <td>{{(o.unitPrice * o.quantity) | currency:\"USD\":true}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n            <div class=\"card-footer text-muted text-right\">Total Price {{data.order.subtotal | currency: \"USD\":true}}</div>\n\n        <button class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"OnCheckout()\">CheckOut</button>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\r\n    errorMessage: string = \"\";\n\n    constructor(public data: DataService,\n        private router: Router) { }\n\n    ngOnInit(): void {\n        if (this.data.order.items.length === 0)\n            this.router.navigate(['/']);\n    }\n\n    onCheckout() {\n        this.data.checkout()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.router.navigate(['/']);\r\n                }\r\n            }, err => this.errorMessage = \"Failed to save order\");\r\n    }\n\n}\n","\r\n<div class=\"alert alert-danger alert-link\" role=\"alert\" *ngIf=\"errorMessage\">\r\n    {{errorMessage}}\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-9 p-0\">\r\n            <table class=\"table\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\" class=\"col-auto\"></th>\r\n                        <th scope=\"col\" class=\"col-auto d-none d-sm-table-cell\">Product</th>\r\n                        <th scope=\"col\" class=\"col-auto\">Description</th>\r\n                        <th scope=\"col\" class=\"col-auto d-none d-sm-table-cell\">Quantity</th>\r\n                        <th scope=\"col\" class=\"col-auto d-none d-sm-table-cell\">One Item Price</th>\r\n                        <th scope=\"col\" class=\"col-auto\"> Price </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr  class=\"text-left\" *ngFor=\"let o of data.order.items\">\r\n                        <td class=\"col-auto\">\r\n                            <img class=\"img-fluid img-thumbnail\" src=\"/img/{{o.ProductArtId}}.jpg\" [alt]=\"o.productTitle\" style=\"height: auto; max-width: 80px\">\r\n                        </td>\r\n                        <td class=\"col-auto d-none d-sm-table-cell\">{{o.productCategory}}</td>\r\n                        <td class=\"col-auto\">{{o.productTitle}}</td>\r\n                        <td class=\"col-auto d-none d-sm-table-cell\">{{o.quantity}}</td>\r\n                        <td class=\"col-auto d-none d-sm-table-cell\">{{o.unitPrice | currency:\"USD\":true}}</td>\r\n                        <td class=\"col-auto\">{{(o.unitPrice * o.quantity) | currency:\"USD\":true}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col p-0 card ml-1\" style=\"min-width:220px\">\r\n\r\n                    <table class=\"table\" style=\"width: 200px; margin:auto\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Subtotal</td>\r\n                                <td>{{data.order.subtotal | currency:\"USD\":true}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Shipping</td>\r\n                                <td>{{data.getShippingPrice() | currency:\"USD\":true}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Total</td>\r\n                                <td>{{(data.order.subtotal + data.getShippingPrice()) | currency:\"USD\":true}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <button type=\"button\" class=\"btn btn-success\" (click) =\"onCheckout()\">Purchase</button>\r\n                                </td>\r\n                                <td>\r\n                                    <a [routerLink]=\"['/']\" class=\"btn btn-danger\">Cancel</a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(private data: DataService, private router: Router) { }\n\n    errorMessage = '';\n\n    public creds = {\n        username: '',\r\n        password: ''\r\n    };\n\n  ngOnInit(): void {\n  }\n\n    onLogin() {\r\n        this.data.login(this.creds).subscribe(success => {\r\n            if (success) {\r\n                if (this.data.order.items.length === 0) {\r\n                    this.router.navigate([\"/\"]);\r\n                } else {\r\n                    this.router.navigate([\"checkout\"]);\r\n                }\r\n            }\r\n        }, err => this.errorMessage ='Failed to login');\r\n    }\n\n}\n","<div class=\"row\">\r\n    <div class=\"col-md-4 offset-md-4 card\">\r\n        <h5 class=\"card-header bg-light\">Login</h5>\r\n        <div class=\"card-body\">\r\n            <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{errorMessage}}</div>\r\n            <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\r\n                    <div class=\"text-danger\" *ngIf=\"username.invalid && username.errors.required && username.touched\">Username is Required</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" #password=\"ngModel\" required />\r\n                    <div class=\"text-danger\" *ngIf=\"password.invalid && password.errors.required && password.touched\">Password is Required</div>\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\" [disabled]=\"theForm.invalid\" />\r\n                    <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/dataService';\r\nimport { Product } from '../shared/product';\r\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n\n    constructor(private data: DataService) {\n        this.products = data.products;\n    }\n\n    products: Product[] = [];\n    ngOnInit(): void {\n        this.data.loadProducts()\n            .subscribe(() => this.products = this.data.products);\n    }\n\n    addProduct(p: Product) {\n        this.data.addToOrder(p);\r\n    }\n\n}\n","<div class=\"row d-flex align-items-start justify-content-around\">\n    <div *ngFor=\"let p of products\" class=\"col-3 p-0 m-1\" id=\"card\">\n        <img class=\"card-img-top\" src=\"/img/{{p.artId}}.jpg\" [alt]=\"p.title\" style=\"max-width: 100%; height: auto\">\n        <div class=\"p-2\">\n            <h6 class=\"card-title font-weight-bold\">{{p.title}}</h6>\n            <p class=\"card-text\">{{p.artDescription | slice:0:38}}...</p>\n        </div>\n        <div class=\"d-flex justify-content-between p-2 card-footer\">\n            <button class=\"btn btn-primary\" (click)=\"addProduct(p)\">Buy</button>\n            <small class=\"\">{{p.price | currency}}</small>\n        </div>\n    </div>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../shared/product';\r\nimport { Observable } from 'rxjs';\r\nimport { Order, OrderItem } from './order';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n\r\n    loadProducts(): Observable<true> {\r\n        return this.http.get('/api/product')\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                })\r\n            )\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length === 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    public login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds).pipe(\r\n            map((data: any) => {\r\n                this.token = data.token;\r\n                this.tokenExpiration = data.expiration;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public addToOrder(newProduct: Product) {\r\n        let item: OrderItem = this.order.items.find(i => i.productId === newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n\r\n            item.productId = newProduct.id;\r\n            item.ProductArtId = newProduct.artId;\r\n            item.productArtist = newProduct.artist;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post('/api/order', this.order, { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`) }).pipe(\r\n            map(response => {\r\n                this.order = new Order();\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public getShippingPrice() {\r\n        // Send Http request to calculate the shipping cost\r\n        return 0;\r\n    }\r\n}","import * as _ from \"lodash\";\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    ProductArtId: string;\r\n\r\n}\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, (i: { unitPrice: number; quantity: number; }) => i.unitPrice * i.quantity));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.scss']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 col-md-6 order-10 order-md-1\">\r\n            <app-product-list></app-product-list>\r\n        </div>\r\n        <div class=\"col-12 col-md-4 p-0 order-1 order-md-10  d-flex justify-content-center\">\r\n            <app-cart></app-cart>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}