@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name</a>
        </li>
        <li class="nav-item">
            @*<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>*@
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Logout">Logout</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            @*<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>*@
            <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            @*Login with MVC*@
            @*<a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login MVC</a>*@
            @*Login with Angular*@
            @*<a class="nav-link text-dark" href="/shop#/login">Login </a>*@
        </li>
    }
</ul>
